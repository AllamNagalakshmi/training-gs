class Solution {
  public static void main(String[] args) {
    int[] arr={1,2};
    int[] arr1={3,4};
    System.out.println(medianOfTwo(arr,arr1));
    
  }
  public static double medianOfTwo(int[] arr,int[] arr1)
  {
    if(arr1.length<arr.length)
    {
      return medianOfTwo(arr1,arr);
    }
    int m=arr.length;
    int n=arr1.length;
    int start=0;
    int end=m;
    while(start<=end)
    {
    int part1=(m+n)/2;
    int part2=(m+n+1)/2-part1;
    int maxleftnums1=part1==0?Integer.MIN_VALUE:arr[part1-1];
    int maxleftnums2=part2==0?Integer.MIN_VALUE:arr1[part2-1];
    int minrightnums1=part1==m?Integer.MAX_VALUE:arr[part1];
    int minrightnums2=part2==n?Integer.MAX_VALUE:arr1[part2];
    if(maxleftnums1<=minrightnums2&&maxleftnums2<=minrightnums1)
    {
      if((m+n)%2==0)
      {
        return(Math.max(maxleftnums1,maxleftnums2)+Math.min(minrightnums1,minrightnums2))/2.0;
      }
      else 
      {
        return Math.max(maxleftnums1,maxleftnums2);
      }
    }
    else if(maxleftnums1>minrightnums2)
    {
      end=part1-1;
    }
    else if(maxleftnums2<minrightnums1)
    {
      start=part1+1;
    }

    }
      return 0;
  }
}
